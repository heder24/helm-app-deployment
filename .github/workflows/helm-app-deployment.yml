name: Deploy AWS Load Balancer Controller
env:
  DOCKER_USER: ${{secrets.DOCKER_HUB_USER}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_HUB_TOKEN}}
  DOCKER_REPOSITORY: my-app
  NODE_IMAGE_TAG: knote

on:
  push:
    branches: [ main]

permissions:
  actions: read
  security-events: write
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Set K8s context
      uses: ossrs/k8s-set-context-action@v1
      with:
        kubeconfig: '${{ secrets.KUBECONFIG }}'

    - name:  update kubeconfig
      run : |
         aws eks update-kubeconfig --region us-east-2 --name prod

    - name: Set up Helm
      uses: azure/setup-helm@v1
      with:
        version: 'latest'
    
    - name: Helm init 
      run: helm init  --stable-repo-url https://charts.helm.sh/stable


    - name: Install eksctl
      run: |
        ARCH=amd64
        PLATFORM=$(uname -s)_$ARCH

        curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"

        # (Optional) Verify checksum
        curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check

        tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz

        sudo mv /tmp/eksctl /usr/local/bin
      shell: bash

    - name: Verify eksctl installation
      run: eksctl version

    - name: Create IAM OIDC provider
      run: |
        eksctl utils associate-iam-oidc-provider \
        --region us-east-2 \
        --cluster prod \
        --approve

    - name: Download IAM policy for the AWS Load Balancer Controller
      run: |
        curl -o iam-policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/install/iam_policy.json


    # - name: Create an IAM policy called AWSLoadBalancerControllerIAMPolicy
    #   run: |
    #     aws iam create-policy \
    #     --policy-name AWSLoadBalancerControllerIAMPolicy \
    #     --policy-document file://iam-policy.json

    - name: Create a IAM role and ServiceAccount for the Load Balancer controller
      run: |
        eksctl create iamserviceaccount \
        --cluster=prod \
        --namespace=kube-system \
        --name=aws-load-balancer-controller \
        --attach-policy-arn=arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:policy/AWSLoadBalancerControllerIAMPolicy \
        --approve

    # - name: Install CRDS
    #   run: |
    #     kubectl apply -k "github.com/aws/eks-charts/stable/aws-load-balancer-controller//crds?ref=master"

    - name: Add Helm repository
      run: |
        helm repo add eks https://aws.github.io/eks-charts

    - name: Update Helm repositories
      run: |
        helm repo update

    - name: Install CRDS
      run: |
        kubectl apply -k "https://github.com/aws/eks-charts/stable/aws-load-balancer-controller//crds?ref=master"
        

    - name: Deploy AWS Load Balancer Controller
      run: |
        helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
          -n kube-system \
          --set clusterName=prod \
          --set serviceAccount.create=false \
          --set serviceAccount.name=aws-load-balancer-controller 
    - name: Verify deployment
      run: |
        kubectl get deployment -n kube-system aws-load-balancer-controller
    # - name: Install CRDS
    #   run: |
    #     kubectl apply -k "github.com/aws/eks-charts/stable/aws-load-balancer-controller//crds?ref=master"
